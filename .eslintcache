[{"/Users/user/Documents/Iridium/Color-Detector/src/index.js":"1","/Users/user/Documents/Iridium/Color-Detector/src/App.js":"2","/Users/user/Documents/Iridium/Color-Detector/src/reportWebVitals.js":"3","/Users/user/Documents/Iridium/Color-Detector/src/components/Logo/Logo.js":"4","/Users/user/Documents/Iridium/Color-Detector/src/components/Navigation/Navigation.js":"5","/Users/user/Documents/Iridium/Color-Detector/src/components/ImageLinkField/ImageLinkField.js":"6","/Users/user/Documents/Iridium/Color-Detector/src/components/Signin/Signin.js":"7","/Users/user/Documents/Iridium/Color-Detector/src/components/ColorDetection/ColorDetection.js":"8","/Users/user/Documents/Iridium/Color-Detector/src/components/Register/Register.js":"9","/Users/user/Documents/Iridium/Color-Detector/src/components/Palettes/Palettes.js":"10"},{"size":520,"mtime":1611491700000,"results":"11","hashOfConfig":"12"},{"size":5869,"mtime":1612299513000,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1609795920000,"results":"14","hashOfConfig":"12"},{"size":238,"mtime":1610919404000,"results":"15","hashOfConfig":"12"},{"size":310,"mtime":1611489433000,"results":"16","hashOfConfig":"12"},{"size":706,"mtime":1611865712000,"results":"17","hashOfConfig":"12"},{"size":3109,"mtime":1611489403000,"results":"18","hashOfConfig":"12"},{"size":333,"mtime":1611489422000,"results":"19","hashOfConfig":"12"},{"size":3572,"mtime":1612535823000,"results":"20","hashOfConfig":"12"},{"size":362,"mtime":1612118717000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"8l700q",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/user/Documents/Iridium/Color-Detector/src/index.js",[],["44","45"],"/Users/user/Documents/Iridium/Color-Detector/src/App.js",["46","47"],"import Clarifai from 'clarifai';\nimport { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport ColorDetection from './components/ColorDetection/ColorDetection';\nimport ImageLinkField from './components/ImageLinkField/ImageLinkField';\nimport Logo from './components/Logo/Logo';\nimport Navigation from './components/Navigation/Navigation';\nimport Palettes from './components/Palettes/Palettes';\nimport Register from './components/Register/Register';\nimport Signin from './components/Signin/Signin';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 160,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n    color: {\n      value: '#9a96ee',\n    },\n    shape: {\n      type: 'circle',\n      stroke: {\n        width: 0,\n        color: '#000000',\n      },\n      polygon: {\n        nb_sides: 5,\n      },\n      image: {\n        src: 'img/github.svg',\n        width: 100,\n        height: 100,\n      },\n    },\n    opacity: {\n      value: 1,\n      random: true,\n      anim: {\n        enable: true,\n        speed: 1,\n        opacity_min: 0,\n        sync: false,\n      },\n    },\n    size: {\n      value: 3,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 4,\n        size_min: 0.3,\n        sync: false,\n      },\n    },\n    line_linked: {\n      enable: false,\n      distance: 150,\n      color: '#ffffff',\n      opacity: 0.4,\n      width: 1,\n    },\n    move: {\n      enable: true,\n      speed: 1,\n      direction: 'none',\n      random: true,\n      straight: false,\n      out_mode: 'out',\n      bounce: false,\n      attract: {\n        enable: false,\n        rotateX: 600,\n        rotateY: 600,\n      },\n    },\n  },\n  interactivity: {\n    detect_on: 'canvas',\n    events: {\n      onhover: {\n        enable: true,\n        mode: 'bubble',\n      },\n      onclick: {\n        enable: true,\n        mode: 'repulse',\n      },\n      resize: true,\n    },\n    modes: {\n      grab: {\n        distance: 400,\n        line_linked: {\n          opacity: 1,\n        },\n      },\n      bubble: {\n        distance: 250,\n        size: 0,\n        duration: 2,\n        opacity: 0,\n        speed: 3,\n      },\n      repulse: {\n        distance: 400,\n        duration: 0.4,\n      },\n      push: {\n        particles_nb: 4,\n      },\n      remove: {\n        particles_nb: 2,\n      },\n    },\n  },\n  retina_detect: true,\n};\n\nconst app = new Clarifai.App({\n  apiKey: '392df143705b437c8bc35ad3e248ad06',\n});\n\nconst initialState = {\n  imageUrl: '',\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    palettes: '',\n    joined: '',\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000')\n      .then((response) => response.json())\n      .then(console.log);\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      input: event.target.value,\n    }); /* update state with input from field*/\n  };\n\n  onButtonDetect = (event) => {\n    this.setState({\n      imageUrl: this.state.input,\n    }); /* on button detect click, update state with input URL from input*/\n    app.models.predict(Clarifai.COLOR_MODEL, this.state.input).then(\n      /*if we use this.state.imageUrl we may get 400 errors */\n      function (response) {\n        let colorsArray = response.outputs[0].data.colors;\n        for (var value of colorsArray) {\n          console.log(\n            `Color: ${value.raw_hex}  Closest W3C Name: ${value.w3c.name}`,\n          ); // go through response and find hex value for each entry in the array\n        }\n      },\n      function (err) {\n        console.log(err); //there was an error\n      },\n    );\n  };\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        palettes: data.palettes,\n        joined: data.joined,\n      },\n    });\n  };\n\n  render() {\n    const {isSignedIn, imageUrl, route} = this.state;\n    return (\n      <div>\n        <Particles id=\"particles-js\" params={particlesOptions} />\n        \n        <>\n          {route === 'home' ? (\n            <>\n              <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                <Logo />\n                <Navigation onRouteChange={this.onRouteChange} />\n              </div>\n              {/* <Palettes\n                name={this.state.user.name}\n                palettes={this.state.user.palettes}\n              /> */}\n              <ImageLinkField\n                onInputChange={this.onInputChange}\n                onButtonDetect={this.onButtonDetect}\n              />\n              <ColorDetection imageUrl={imageUrl} />{' '}\n              {/*pass the image URL to the ColorDetection component */}\n              {/*TODO add a rendering of the colors and probabilites in chart, & add button to save palette in user profile*/}\n            </>\n          ) : route === 'signin' ? (\n            <>\n              <div className=\"center\">\n                <Logo />\n              </div>\n              <div>\n                <Signin\n                  loadUser={this.loadUser}\n                  onRouteChange={this.onRouteChange}\n                />\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"center\">\n                <Logo />\n              </div>\n              <div>\n                <Register\n                  loadUser={this.loadUser}\n                  onRouteChange={this.onRouteChange}\n                />\n              </div>\n            </>\n          )}\n        </>\n      </div>\n    );\n  }\n}\nexport default App;\n","/Users/user/Documents/Iridium/Color-Detector/src/reportWebVitals.js",[],"/Users/user/Documents/Iridium/Color-Detector/src/components/Logo/Logo.js",[],"/Users/user/Documents/Iridium/Color-Detector/src/components/Navigation/Navigation.js",[],"/Users/user/Documents/Iridium/Color-Detector/src/components/ImageLinkField/ImageLinkField.js",[],"/Users/user/Documents/Iridium/Color-Detector/src/components/Signin/Signin.js",[],"/Users/user/Documents/Iridium/Color-Detector/src/components/ColorDetection/ColorDetection.js",[],"/Users/user/Documents/Iridium/Color-Detector/src/components/Register/Register.js",[],"/Users/user/Documents/Iridium/Color-Detector/src/components/Palettes/Palettes.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":9,"column":8,"nodeType":"54","messageId":"55","endLine":9,"endColumn":16},{"ruleId":"52","severity":1,"message":"56","line":201,"column":12,"nodeType":"54","messageId":"55","endLine":201,"endColumn":22},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Palettes' is defined but never used.","Identifier","unusedVar","'isSignedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]